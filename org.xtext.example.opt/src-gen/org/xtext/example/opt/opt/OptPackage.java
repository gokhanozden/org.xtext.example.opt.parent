/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.opt.opt;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.opt.opt.OptFactory
 * @model kind="package"
 * @generated
 */
public interface OptPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "opt";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/opt/Opt";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "opt";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  OptPackage eINSTANCE = org.xtext.example.opt.opt.impl.OptPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.ModelImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.TypeImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getType()
   * @generated
   */
  int TYPE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = 0;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.OptimizerImpl <em>Optimizer</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.OptimizerImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getOptimizer()
   * @generated
   */
  int OPTIMIZER = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Objective</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER__OBJECTIVE = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Stoppingcriteria</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER__STOPPINGCRITERIA = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Optimizationmethod</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER__OPTIMIZATIONMETHOD = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Seed</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER__SEED = TYPE_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Minmax</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER__MINMAX = TYPE_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Optimizer</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER_FEATURE_COUNT = TYPE_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.OptimizationMethodImpl <em>Optimization Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.OptimizationMethodImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getOptimizationMethod()
   * @generated
   */
  int OPTIMIZATION_METHOD = 3;

  /**
   * The number of structural features of the '<em>Optimization Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZATION_METHOD_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl <em>Evolutionary Strategies</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getEvolutionaryStrategies()
   * @generated
   */
  int EVOLUTIONARY_STRATEGIES = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVOLUTIONARY_STRATEGIES__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Mu</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVOLUTIONARY_STRATEGIES__MU = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Lambda</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVOLUTIONARY_STRATEGIES__LAMBDA = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Sigma</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVOLUTIONARY_STRATEGIES__SIGMA = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Strategy</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVOLUTIONARY_STRATEGIES__STRATEGY = TYPE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Evolutionary Strategies</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVOLUTIONARY_STRATEGIES_FEATURE_COUNT = TYPE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.VariableImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__TYPE = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Group</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__GROUP = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Low Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__LOW_VALUE = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>High Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__HIGH_VALUE = TYPE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = TYPE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.ObjectiveImpl <em>Objective</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.ObjectiveImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getObjective()
   * @generated
   */
  int OBJECTIVE = 6;

  /**
   * The number of structural features of the '<em>Objective</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECTIVE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.SimulationImpl <em>Simulation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.SimulationImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getSimulation()
   * @generated
   */
  int SIMULATION = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMULATION__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Model File Folder Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMULATION__MODEL_FILE_FOLDER_PATH = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Function Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMULATION__FUNCTION_NAME = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Initialization</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMULATION__INITIALIZATION = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Model Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMULATION__MODEL_TYPE = TYPE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Simulation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMULATION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.ExpressionImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OPERATOR = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.FunctionImpl <em>Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.FunctionImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getFunction()
   * @generated
   */
  int FUNCTION = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Function1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__FUNCTION1 = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.Stopping_CriteriaImpl <em>Stopping Criteria</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.Stopping_CriteriaImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getStopping_Criteria()
   * @generated
   */
  int STOPPING_CRITERIA = 10;

  /**
   * The number of structural features of the '<em>Stopping Criteria</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STOPPING_CRITERIA_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.ConvergenceImpl <em>Convergence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.ConvergenceImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getConvergence()
   * @generated
   */
  int CONVERGENCE = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONVERGENCE__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Convergence Threshold</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONVERGENCE__CONVERGENCE_THRESHOLD = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Convergencerange</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONVERGENCE__CONVERGENCERANGE = TYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Convergence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONVERGENCE_FEATURE_COUNT = TYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.DurationImpl <em>Duration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.DurationImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getDuration()
   * @generated
   */
  int DURATION = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DURATION__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Durationtime</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DURATION__DURATIONTIME = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Duration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DURATION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.EndTimeImpl <em>End Time</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.EndTimeImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getEndTime()
   * @generated
   */
  int END_TIME = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int END_TIME__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Endtime</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int END_TIME__ENDTIME = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>End Time</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int END_TIME_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.MaxIterationImpl <em>Max Iteration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.MaxIterationImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getMaxIteration()
   * @generated
   */
  int MAX_ITERATION = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAX_ITERATION__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Maxiteration</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAX_ITERATION__MAXITERATION = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Max Iteration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAX_ITERATION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.ThresholdImpl <em>Threshold</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.ThresholdImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getThreshold()
   * @generated
   */
  int THRESHOLD = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THRESHOLD__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Thresholdvalue</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THRESHOLD__THRESHOLDVALUE = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Threshold</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THRESHOLD_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.IntConstantImpl <em>Int Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.IntConstantImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getIntConstant()
   * @generated
   */
  int INT_CONSTANT = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.DecimalConstantImpl <em>Decimal Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.DecimalConstantImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getDecimalConstant()
   * @generated
   */
  int DECIMAL_CONSTANT = 17;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_CONSTANT__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_CONSTANT__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_CONSTANT__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Decimal Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.impl.variableRefImpl <em>variable Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.impl.variableRefImpl
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getvariableRef()
   * @generated
   */
  int VARIABLE_REF = 18;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__VARIABLE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>variable Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.ESStrategy <em>ES Strategy</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.ESStrategy
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getESStrategy()
   * @generated
   */
  int ES_STRATEGY = 19;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.VariableGroup <em>Variable Group</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.VariableGroup
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getVariableGroup()
   * @generated
   */
  int VARIABLE_GROUP = 20;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.VariableType <em>Variable Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.VariableType
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getVariableType()
   * @generated
   */
  int VARIABLE_TYPE = 21;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.MinMax <em>Min Max</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.MinMax
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getMinMax()
   * @generated
   */
  int MIN_MAX = 22;

  /**
   * The meta object id for the '{@link org.xtext.example.opt.opt.SimModelType <em>Sim Model Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.opt.opt.SimModelType
   * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getSimModelType()
   * @generated
   */
  int SIM_MODEL_TYPE = 23;


  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.example.opt.opt.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.opt.opt.Model#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.example.opt.opt.Model#getElements()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see org.xtext.example.opt.opt.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.opt.opt.Type#getName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Optimizer <em>Optimizer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Optimizer</em>'.
   * @see org.xtext.example.opt.opt.Optimizer
   * @generated
   */
  EClass getOptimizer();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.opt.opt.Optimizer#getObjective <em>Objective</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Objective</em>'.
   * @see org.xtext.example.opt.opt.Optimizer#getObjective()
   * @see #getOptimizer()
   * @generated
   */
  EReference getOptimizer_Objective();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.opt.opt.Optimizer#getStoppingcriteria <em>Stoppingcriteria</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Stoppingcriteria</em>'.
   * @see org.xtext.example.opt.opt.Optimizer#getStoppingcriteria()
   * @see #getOptimizer()
   * @generated
   */
  EReference getOptimizer_Stoppingcriteria();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.opt.opt.Optimizer#getOptimizationmethod <em>Optimizationmethod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Optimizationmethod</em>'.
   * @see org.xtext.example.opt.opt.Optimizer#getOptimizationmethod()
   * @see #getOptimizer()
   * @generated
   */
  EReference getOptimizer_Optimizationmethod();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Optimizer#getSeed <em>Seed</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Seed</em>'.
   * @see org.xtext.example.opt.opt.Optimizer#getSeed()
   * @see #getOptimizer()
   * @generated
   */
  EAttribute getOptimizer_Seed();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Optimizer#getMinmax <em>Minmax</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Minmax</em>'.
   * @see org.xtext.example.opt.opt.Optimizer#getMinmax()
   * @see #getOptimizer()
   * @generated
   */
  EAttribute getOptimizer_Minmax();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.OptimizationMethod <em>Optimization Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Optimization Method</em>'.
   * @see org.xtext.example.opt.opt.OptimizationMethod
   * @generated
   */
  EClass getOptimizationMethod();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.EvolutionaryStrategies <em>Evolutionary Strategies</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Evolutionary Strategies</em>'.
   * @see org.xtext.example.opt.opt.EvolutionaryStrategies
   * @generated
   */
  EClass getEvolutionaryStrategies();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.EvolutionaryStrategies#getMu <em>Mu</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mu</em>'.
   * @see org.xtext.example.opt.opt.EvolutionaryStrategies#getMu()
   * @see #getEvolutionaryStrategies()
   * @generated
   */
  EAttribute getEvolutionaryStrategies_Mu();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.EvolutionaryStrategies#getLambda <em>Lambda</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lambda</em>'.
   * @see org.xtext.example.opt.opt.EvolutionaryStrategies#getLambda()
   * @see #getEvolutionaryStrategies()
   * @generated
   */
  EAttribute getEvolutionaryStrategies_Lambda();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.EvolutionaryStrategies#getSigma <em>Sigma</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sigma</em>'.
   * @see org.xtext.example.opt.opt.EvolutionaryStrategies#getSigma()
   * @see #getEvolutionaryStrategies()
   * @generated
   */
  EAttribute getEvolutionaryStrategies_Sigma();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.EvolutionaryStrategies#getStrategy <em>Strategy</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Strategy</em>'.
   * @see org.xtext.example.opt.opt.EvolutionaryStrategies#getStrategy()
   * @see #getEvolutionaryStrategies()
   * @generated
   */
  EAttribute getEvolutionaryStrategies_Strategy();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.xtext.example.opt.opt.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Variable#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.example.opt.opt.Variable#getType()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Type();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Variable#getGroup <em>Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Group</em>'.
   * @see org.xtext.example.opt.opt.Variable#getGroup()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Group();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Variable#getLowValue <em>Low Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Low Value</em>'.
   * @see org.xtext.example.opt.opt.Variable#getLowValue()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_LowValue();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Variable#getHighValue <em>High Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>High Value</em>'.
   * @see org.xtext.example.opt.opt.Variable#getHighValue()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_HighValue();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Objective <em>Objective</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Objective</em>'.
   * @see org.xtext.example.opt.opt.Objective
   * @generated
   */
  EClass getObjective();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Simulation <em>Simulation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simulation</em>'.
   * @see org.xtext.example.opt.opt.Simulation
   * @generated
   */
  EClass getSimulation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Simulation#getModelFileFolderPath <em>Model File Folder Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Model File Folder Path</em>'.
   * @see org.xtext.example.opt.opt.Simulation#getModelFileFolderPath()
   * @see #getSimulation()
   * @generated
   */
  EAttribute getSimulation_ModelFileFolderPath();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Simulation#getFunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Function Name</em>'.
   * @see org.xtext.example.opt.opt.Simulation#getFunctionName()
   * @see #getSimulation()
   * @generated
   */
  EAttribute getSimulation_FunctionName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Simulation#getInitialization <em>Initialization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Initialization</em>'.
   * @see org.xtext.example.opt.opt.Simulation#getInitialization()
   * @see #getSimulation()
   * @generated
   */
  EAttribute getSimulation_Initialization();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Simulation#getModelType <em>Model Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Model Type</em>'.
   * @see org.xtext.example.opt.opt.Simulation#getModelType()
   * @see #getSimulation()
   * @generated
   */
  EAttribute getSimulation_ModelType();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.example.opt.opt.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.opt.opt.Expression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.opt.opt.Expression#getLeft()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Expression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.opt.opt.Expression#getOperator()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.opt.opt.Expression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.opt.opt.Expression#getRight()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function</em>'.
   * @see org.xtext.example.opt.opt.Function
   * @generated
   */
  EClass getFunction();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.opt.opt.Function#getFunction1 <em>Function1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function1</em>'.
   * @see org.xtext.example.opt.opt.Function#getFunction1()
   * @see #getFunction()
   * @generated
   */
  EReference getFunction_Function1();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Stopping_Criteria <em>Stopping Criteria</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Stopping Criteria</em>'.
   * @see org.xtext.example.opt.opt.Stopping_Criteria
   * @generated
   */
  EClass getStopping_Criteria();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Convergence <em>Convergence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Convergence</em>'.
   * @see org.xtext.example.opt.opt.Convergence
   * @generated
   */
  EClass getConvergence();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Convergence#getConvergenceThreshold <em>Convergence Threshold</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Convergence Threshold</em>'.
   * @see org.xtext.example.opt.opt.Convergence#getConvergenceThreshold()
   * @see #getConvergence()
   * @generated
   */
  EAttribute getConvergence_ConvergenceThreshold();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Convergence#getConvergencerange <em>Convergencerange</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Convergencerange</em>'.
   * @see org.xtext.example.opt.opt.Convergence#getConvergencerange()
   * @see #getConvergence()
   * @generated
   */
  EAttribute getConvergence_Convergencerange();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Duration <em>Duration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Duration</em>'.
   * @see org.xtext.example.opt.opt.Duration
   * @generated
   */
  EClass getDuration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Duration#getDurationtime <em>Durationtime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Durationtime</em>'.
   * @see org.xtext.example.opt.opt.Duration#getDurationtime()
   * @see #getDuration()
   * @generated
   */
  EAttribute getDuration_Durationtime();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.EndTime <em>End Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>End Time</em>'.
   * @see org.xtext.example.opt.opt.EndTime
   * @generated
   */
  EClass getEndTime();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.EndTime#getEndtime <em>Endtime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Endtime</em>'.
   * @see org.xtext.example.opt.opt.EndTime#getEndtime()
   * @see #getEndTime()
   * @generated
   */
  EAttribute getEndTime_Endtime();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.MaxIteration <em>Max Iteration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Max Iteration</em>'.
   * @see org.xtext.example.opt.opt.MaxIteration
   * @generated
   */
  EClass getMaxIteration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.MaxIteration#getMaxiteration <em>Maxiteration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Maxiteration</em>'.
   * @see org.xtext.example.opt.opt.MaxIteration#getMaxiteration()
   * @see #getMaxIteration()
   * @generated
   */
  EAttribute getMaxIteration_Maxiteration();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.Threshold <em>Threshold</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Threshold</em>'.
   * @see org.xtext.example.opt.opt.Threshold
   * @generated
   */
  EClass getThreshold();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.Threshold#getThresholdvalue <em>Thresholdvalue</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Thresholdvalue</em>'.
   * @see org.xtext.example.opt.opt.Threshold#getThresholdvalue()
   * @see #getThreshold()
   * @generated
   */
  EAttribute getThreshold_Thresholdvalue();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.IntConstant <em>Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Constant</em>'.
   * @see org.xtext.example.opt.opt.IntConstant
   * @generated
   */
  EClass getIntConstant();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.IntConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.opt.opt.IntConstant#getValue()
   * @see #getIntConstant()
   * @generated
   */
  EAttribute getIntConstant_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.DecimalConstant <em>Decimal Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decimal Constant</em>'.
   * @see org.xtext.example.opt.opt.DecimalConstant
   * @generated
   */
  EClass getDecimalConstant();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.opt.opt.DecimalConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.opt.opt.DecimalConstant#getValue()
   * @see #getDecimalConstant()
   * @generated
   */
  EAttribute getDecimalConstant_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.opt.opt.variableRef <em>variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable Ref</em>'.
   * @see org.xtext.example.opt.opt.variableRef
   * @generated
   */
  EClass getvariableRef();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.opt.opt.variableRef#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see org.xtext.example.opt.opt.variableRef#getVariable()
   * @see #getvariableRef()
   * @generated
   */
  EReference getvariableRef_Variable();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.opt.opt.ESStrategy <em>ES Strategy</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>ES Strategy</em>'.
   * @see org.xtext.example.opt.opt.ESStrategy
   * @generated
   */
  EEnum getESStrategy();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.opt.opt.VariableGroup <em>Variable Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Variable Group</em>'.
   * @see org.xtext.example.opt.opt.VariableGroup
   * @generated
   */
  EEnum getVariableGroup();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.opt.opt.VariableType <em>Variable Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Variable Type</em>'.
   * @see org.xtext.example.opt.opt.VariableType
   * @generated
   */
  EEnum getVariableType();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.opt.opt.MinMax <em>Min Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Min Max</em>'.
   * @see org.xtext.example.opt.opt.MinMax
   * @generated
   */
  EEnum getMinMax();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.opt.opt.SimModelType <em>Sim Model Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Sim Model Type</em>'.
   * @see org.xtext.example.opt.opt.SimModelType
   * @generated
   */
  EEnum getSimModelType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  OptFactory getOptFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.ModelImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__ELEMENTS = eINSTANCE.getModel_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.TypeImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__NAME = eINSTANCE.getType_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.OptimizerImpl <em>Optimizer</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.OptimizerImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getOptimizer()
     * @generated
     */
    EClass OPTIMIZER = eINSTANCE.getOptimizer();

    /**
     * The meta object literal for the '<em><b>Objective</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPTIMIZER__OBJECTIVE = eINSTANCE.getOptimizer_Objective();

    /**
     * The meta object literal for the '<em><b>Stoppingcriteria</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPTIMIZER__STOPPINGCRITERIA = eINSTANCE.getOptimizer_Stoppingcriteria();

    /**
     * The meta object literal for the '<em><b>Optimizationmethod</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPTIMIZER__OPTIMIZATIONMETHOD = eINSTANCE.getOptimizer_Optimizationmethod();

    /**
     * The meta object literal for the '<em><b>Seed</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPTIMIZER__SEED = eINSTANCE.getOptimizer_Seed();

    /**
     * The meta object literal for the '<em><b>Minmax</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPTIMIZER__MINMAX = eINSTANCE.getOptimizer_Minmax();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.OptimizationMethodImpl <em>Optimization Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.OptimizationMethodImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getOptimizationMethod()
     * @generated
     */
    EClass OPTIMIZATION_METHOD = eINSTANCE.getOptimizationMethod();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl <em>Evolutionary Strategies</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getEvolutionaryStrategies()
     * @generated
     */
    EClass EVOLUTIONARY_STRATEGIES = eINSTANCE.getEvolutionaryStrategies();

    /**
     * The meta object literal for the '<em><b>Mu</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EVOLUTIONARY_STRATEGIES__MU = eINSTANCE.getEvolutionaryStrategies_Mu();

    /**
     * The meta object literal for the '<em><b>Lambda</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EVOLUTIONARY_STRATEGIES__LAMBDA = eINSTANCE.getEvolutionaryStrategies_Lambda();

    /**
     * The meta object literal for the '<em><b>Sigma</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EVOLUTIONARY_STRATEGIES__SIGMA = eINSTANCE.getEvolutionaryStrategies_Sigma();

    /**
     * The meta object literal for the '<em><b>Strategy</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EVOLUTIONARY_STRATEGIES__STRATEGY = eINSTANCE.getEvolutionaryStrategies_Strategy();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.VariableImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__TYPE = eINSTANCE.getVariable_Type();

    /**
     * The meta object literal for the '<em><b>Group</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__GROUP = eINSTANCE.getVariable_Group();

    /**
     * The meta object literal for the '<em><b>Low Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__LOW_VALUE = eINSTANCE.getVariable_LowValue();

    /**
     * The meta object literal for the '<em><b>High Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__HIGH_VALUE = eINSTANCE.getVariable_HighValue();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.ObjectiveImpl <em>Objective</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.ObjectiveImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getObjective()
     * @generated
     */
    EClass OBJECTIVE = eINSTANCE.getObjective();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.SimulationImpl <em>Simulation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.SimulationImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getSimulation()
     * @generated
     */
    EClass SIMULATION = eINSTANCE.getSimulation();

    /**
     * The meta object literal for the '<em><b>Model File Folder Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMULATION__MODEL_FILE_FOLDER_PATH = eINSTANCE.getSimulation_ModelFileFolderPath();

    /**
     * The meta object literal for the '<em><b>Function Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMULATION__FUNCTION_NAME = eINSTANCE.getSimulation_FunctionName();

    /**
     * The meta object literal for the '<em><b>Initialization</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMULATION__INITIALIZATION = eINSTANCE.getSimulation_Initialization();

    /**
     * The meta object literal for the '<em><b>Model Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMULATION__MODEL_TYPE = eINSTANCE.getSimulation_ModelType();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.ExpressionImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LEFT = eINSTANCE.getExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__OPERATOR = eINSTANCE.getExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__RIGHT = eINSTANCE.getExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.FunctionImpl <em>Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.FunctionImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getFunction()
     * @generated
     */
    EClass FUNCTION = eINSTANCE.getFunction();

    /**
     * The meta object literal for the '<em><b>Function1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION__FUNCTION1 = eINSTANCE.getFunction_Function1();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.Stopping_CriteriaImpl <em>Stopping Criteria</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.Stopping_CriteriaImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getStopping_Criteria()
     * @generated
     */
    EClass STOPPING_CRITERIA = eINSTANCE.getStopping_Criteria();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.ConvergenceImpl <em>Convergence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.ConvergenceImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getConvergence()
     * @generated
     */
    EClass CONVERGENCE = eINSTANCE.getConvergence();

    /**
     * The meta object literal for the '<em><b>Convergence Threshold</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONVERGENCE__CONVERGENCE_THRESHOLD = eINSTANCE.getConvergence_ConvergenceThreshold();

    /**
     * The meta object literal for the '<em><b>Convergencerange</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONVERGENCE__CONVERGENCERANGE = eINSTANCE.getConvergence_Convergencerange();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.DurationImpl <em>Duration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.DurationImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getDuration()
     * @generated
     */
    EClass DURATION = eINSTANCE.getDuration();

    /**
     * The meta object literal for the '<em><b>Durationtime</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DURATION__DURATIONTIME = eINSTANCE.getDuration_Durationtime();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.EndTimeImpl <em>End Time</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.EndTimeImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getEndTime()
     * @generated
     */
    EClass END_TIME = eINSTANCE.getEndTime();

    /**
     * The meta object literal for the '<em><b>Endtime</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute END_TIME__ENDTIME = eINSTANCE.getEndTime_Endtime();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.MaxIterationImpl <em>Max Iteration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.MaxIterationImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getMaxIteration()
     * @generated
     */
    EClass MAX_ITERATION = eINSTANCE.getMaxIteration();

    /**
     * The meta object literal for the '<em><b>Maxiteration</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAX_ITERATION__MAXITERATION = eINSTANCE.getMaxIteration_Maxiteration();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.ThresholdImpl <em>Threshold</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.ThresholdImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getThreshold()
     * @generated
     */
    EClass THRESHOLD = eINSTANCE.getThreshold();

    /**
     * The meta object literal for the '<em><b>Thresholdvalue</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THRESHOLD__THRESHOLDVALUE = eINSTANCE.getThreshold_Thresholdvalue();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.IntConstantImpl <em>Int Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.IntConstantImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getIntConstant()
     * @generated
     */
    EClass INT_CONSTANT = eINSTANCE.getIntConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_CONSTANT__VALUE = eINSTANCE.getIntConstant_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.DecimalConstantImpl <em>Decimal Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.DecimalConstantImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getDecimalConstant()
     * @generated
     */
    EClass DECIMAL_CONSTANT = eINSTANCE.getDecimalConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECIMAL_CONSTANT__VALUE = eINSTANCE.getDecimalConstant_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.impl.variableRefImpl <em>variable Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.impl.variableRefImpl
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getvariableRef()
     * @generated
     */
    EClass VARIABLE_REF = eINSTANCE.getvariableRef();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_REF__VARIABLE = eINSTANCE.getvariableRef_Variable();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.ESStrategy <em>ES Strategy</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.ESStrategy
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getESStrategy()
     * @generated
     */
    EEnum ES_STRATEGY = eINSTANCE.getESStrategy();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.VariableGroup <em>Variable Group</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.VariableGroup
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getVariableGroup()
     * @generated
     */
    EEnum VARIABLE_GROUP = eINSTANCE.getVariableGroup();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.VariableType <em>Variable Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.VariableType
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getVariableType()
     * @generated
     */
    EEnum VARIABLE_TYPE = eINSTANCE.getVariableType();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.MinMax <em>Min Max</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.MinMax
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getMinMax()
     * @generated
     */
    EEnum MIN_MAX = eINSTANCE.getMinMax();

    /**
     * The meta object literal for the '{@link org.xtext.example.opt.opt.SimModelType <em>Sim Model Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.opt.opt.SimModelType
     * @see org.xtext.example.opt.opt.impl.OptPackageImpl#getSimModelType()
     * @generated
     */
    EEnum SIM_MODEL_TYPE = eINSTANCE.getSimModelType();

  }

} //OptPackage
