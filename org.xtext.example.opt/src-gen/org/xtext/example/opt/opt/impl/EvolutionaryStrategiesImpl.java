/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.opt.opt.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.opt.opt.ESStrategy;
import org.xtext.example.opt.opt.EvolutionaryStrategies;
import org.xtext.example.opt.opt.OptPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Evolutionary Strategies</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl#getMu <em>Mu</em>}</li>
 *   <li>{@link org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl#getLambda <em>Lambda</em>}</li>
 *   <li>{@link org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl#getSigma <em>Sigma</em>}</li>
 *   <li>{@link org.xtext.example.opt.opt.impl.EvolutionaryStrategiesImpl#getStrategy <em>Strategy</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class EvolutionaryStrategiesImpl extends TypeImpl implements EvolutionaryStrategies
{
  /**
   * The default value of the '{@link #getMu() <em>Mu</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMu()
   * @generated
   * @ordered
   */
  protected static final int MU_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMu() <em>Mu</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMu()
   * @generated
   * @ordered
   */
  protected int mu = MU_EDEFAULT;

  /**
   * The default value of the '{@link #getLambda() <em>Lambda</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLambda()
   * @generated
   * @ordered
   */
  protected static final int LAMBDA_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLambda() <em>Lambda</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLambda()
   * @generated
   * @ordered
   */
  protected int lambda = LAMBDA_EDEFAULT;

  /**
   * The default value of the '{@link #getSigma() <em>Sigma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSigma()
   * @generated
   * @ordered
   */
  protected static final String SIGMA_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSigma() <em>Sigma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSigma()
   * @generated
   * @ordered
   */
  protected String sigma = SIGMA_EDEFAULT;

  /**
   * The default value of the '{@link #getStrategy() <em>Strategy</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrategy()
   * @generated
   * @ordered
   */
  protected static final ESStrategy STRATEGY_EDEFAULT = ESStrategy.COMMA;

  /**
   * The cached value of the '{@link #getStrategy() <em>Strategy</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrategy()
   * @generated
   * @ordered
   */
  protected ESStrategy strategy = STRATEGY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EvolutionaryStrategiesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptPackage.Literals.EVOLUTIONARY_STRATEGIES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMu()
  {
    return mu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMu(int newMu)
  {
    int oldMu = mu;
    mu = newMu;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptPackage.EVOLUTIONARY_STRATEGIES__MU, oldMu, mu));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getLambda()
  {
    return lambda;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLambda(int newLambda)
  {
    int oldLambda = lambda;
    lambda = newLambda;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptPackage.EVOLUTIONARY_STRATEGIES__LAMBDA, oldLambda, lambda));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSigma()
  {
    return sigma;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSigma(String newSigma)
  {
    String oldSigma = sigma;
    sigma = newSigma;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptPackage.EVOLUTIONARY_STRATEGIES__SIGMA, oldSigma, sigma));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ESStrategy getStrategy()
  {
    return strategy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStrategy(ESStrategy newStrategy)
  {
    ESStrategy oldStrategy = strategy;
    strategy = newStrategy == null ? STRATEGY_EDEFAULT : newStrategy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptPackage.EVOLUTIONARY_STRATEGIES__STRATEGY, oldStrategy, strategy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptPackage.EVOLUTIONARY_STRATEGIES__MU:
        return getMu();
      case OptPackage.EVOLUTIONARY_STRATEGIES__LAMBDA:
        return getLambda();
      case OptPackage.EVOLUTIONARY_STRATEGIES__SIGMA:
        return getSigma();
      case OptPackage.EVOLUTIONARY_STRATEGIES__STRATEGY:
        return getStrategy();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptPackage.EVOLUTIONARY_STRATEGIES__MU:
        setMu((Integer)newValue);
        return;
      case OptPackage.EVOLUTIONARY_STRATEGIES__LAMBDA:
        setLambda((Integer)newValue);
        return;
      case OptPackage.EVOLUTIONARY_STRATEGIES__SIGMA:
        setSigma((String)newValue);
        return;
      case OptPackage.EVOLUTIONARY_STRATEGIES__STRATEGY:
        setStrategy((ESStrategy)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptPackage.EVOLUTIONARY_STRATEGIES__MU:
        setMu(MU_EDEFAULT);
        return;
      case OptPackage.EVOLUTIONARY_STRATEGIES__LAMBDA:
        setLambda(LAMBDA_EDEFAULT);
        return;
      case OptPackage.EVOLUTIONARY_STRATEGIES__SIGMA:
        setSigma(SIGMA_EDEFAULT);
        return;
      case OptPackage.EVOLUTIONARY_STRATEGIES__STRATEGY:
        setStrategy(STRATEGY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptPackage.EVOLUTIONARY_STRATEGIES__MU:
        return mu != MU_EDEFAULT;
      case OptPackage.EVOLUTIONARY_STRATEGIES__LAMBDA:
        return lambda != LAMBDA_EDEFAULT;
      case OptPackage.EVOLUTIONARY_STRATEGIES__SIGMA:
        return SIGMA_EDEFAULT == null ? sigma != null : !SIGMA_EDEFAULT.equals(sigma);
      case OptPackage.EVOLUTIONARY_STRATEGIES__STRATEGY:
        return strategy != STRATEGY_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (mu: ");
    result.append(mu);
    result.append(", lambda: ");
    result.append(lambda);
    result.append(", sigma: ");
    result.append(sigma);
    result.append(", strategy: ");
    result.append(strategy);
    result.append(')');
    return result.toString();
  }

} //EvolutionaryStrategiesImpl
