/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.opt.opt.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.opt.opt.OptPackage;
import org.xtext.example.opt.opt.Threshold;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Threshold</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.opt.opt.impl.ThresholdImpl#getThresholdvalue <em>Thresholdvalue</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ThresholdImpl extends TypeImpl implements Threshold
{
  /**
   * The default value of the '{@link #getThresholdvalue() <em>Thresholdvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThresholdvalue()
   * @generated
   * @ordered
   */
  protected static final String THRESHOLDVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getThresholdvalue() <em>Thresholdvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThresholdvalue()
   * @generated
   * @ordered
   */
  protected String thresholdvalue = THRESHOLDVALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ThresholdImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptPackage.Literals.THRESHOLD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getThresholdvalue()
  {
    return thresholdvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThresholdvalue(String newThresholdvalue)
  {
    String oldThresholdvalue = thresholdvalue;
    thresholdvalue = newThresholdvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptPackage.THRESHOLD__THRESHOLDVALUE, oldThresholdvalue, thresholdvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptPackage.THRESHOLD__THRESHOLDVALUE:
        return getThresholdvalue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptPackage.THRESHOLD__THRESHOLDVALUE:
        setThresholdvalue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptPackage.THRESHOLD__THRESHOLDVALUE:
        setThresholdvalue(THRESHOLDVALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptPackage.THRESHOLD__THRESHOLDVALUE:
        return THRESHOLDVALUE_EDEFAULT == null ? thresholdvalue != null : !THRESHOLDVALUE_EDEFAULT.equals(thresholdvalue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (thresholdvalue: ");
    result.append(thresholdvalue);
    result.append(')');
    return result.toString();
  }

} //ThresholdImpl
