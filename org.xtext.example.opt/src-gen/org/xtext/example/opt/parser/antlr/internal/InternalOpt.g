/*
 * generated by Xtext 2.9.2
 */
grammar InternalOpt;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.opt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.opt.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.opt.services.OptGrammarAccess;

}

@parser::members {

 	private OptGrammarAccess grammarAccess;

    public InternalOptParser(TokenStream input, OptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected OptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0());
			}
			lv_elements_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.example.opt.Opt.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getOptimizerParserRuleCall_0());
		}
		this_Optimizer_0=ruleOptimizer
		{
			$current = $this_Optimizer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSimulationParserRuleCall_2());
		}
		this_Simulation_2=ruleSimulation
		{
			$current = $this_Simulation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getFunctionParserRuleCall_3());
		}
		this_Function_3=ruleFunction
		{
			$current = $this_Function_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getEvolutionaryStrategiesParserRuleCall_4());
		}
		this_EvolutionaryStrategies_4=ruleEvolutionaryStrategies
		{
			$current = $this_EvolutionaryStrategies_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getConvergenceParserRuleCall_5());
		}
		this_Convergence_5=ruleConvergence
		{
			$current = $this_Convergence_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getDurationParserRuleCall_6());
		}
		this_Duration_6=ruleDuration
		{
			$current = $this_Duration_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getEndTimeParserRuleCall_7());
		}
		this_EndTime_7=ruleEndTime
		{
			$current = $this_EndTime_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getMaxIterationParserRuleCall_8());
		}
		this_MaxIteration_8=ruleMaxIteration
		{
			$current = $this_MaxIteration_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getThresholdParserRuleCall_9());
		}
		this_Threshold_9=ruleThreshold
		{
			$current = $this_Threshold_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOptimizer
entryRuleOptimizer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptimizerRule()); }
	iv_ruleOptimizer=ruleOptimizer
	{ $current=$iv_ruleOptimizer.current; }
	EOF;

// Rule Optimizer
ruleOptimizer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optimizer'
		{
			newLeafNode(otherlv_0, grammarAccess.getOptimizerAccess().getOptimizerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOptimizerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptimizerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOptimizerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='objective'
		{
			newLeafNode(otherlv_3, grammarAccess.getOptimizerAccess().getObjectiveKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptimizerRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getOptimizerAccess().getObjectiveObjectiveCrossReference_4_0());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getOptimizerAccess().getSemicolonKeyword_5());
		}
		otherlv_6='stoppingcriteria'
		{
			newLeafNode(otherlv_6, grammarAccess.getOptimizerAccess().getStoppingcriteriaKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptimizerRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getOptimizerAccess().getStoppingcriteriaStopping_CriteriaCrossReference_7_0());
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getOptimizerAccess().getSemicolonKeyword_8());
		}
		otherlv_9='optimizationmethod'
		{
			newLeafNode(otherlv_9, grammarAccess.getOptimizerAccess().getOptimizationmethodKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptimizerRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getOptimizerAccess().getOptimizationmethodOptimizationMethodCrossReference_10_0());
				}
			)
		)
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getOptimizerAccess().getSemicolonKeyword_11());
		}
		otherlv_12='seed'
		{
			newLeafNode(otherlv_12, grammarAccess.getOptimizerAccess().getSeedKeyword_12());
		}
		(
			(
				lv_seed_13_0=RULE_INT
				{
					newLeafNode(lv_seed_13_0, grammarAccess.getOptimizerAccess().getSeedINTTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptimizerRule());
					}
					setWithLastConsumed(
						$current,
						"seed",
						lv_seed_13_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getOptimizerAccess().getSemicolonKeyword_14());
		}
		otherlv_15='minmax'
		{
			newLeafNode(otherlv_15, grammarAccess.getOptimizerAccess().getMinmaxKeyword_15());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOptimizerAccess().getMinmaxMinMaxEnumRuleCall_16_0());
				}
				lv_minmax_16_0=ruleMinMax
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptimizerRule());
					}
					set(
						$current,
						"minmax",
						lv_minmax_16_0,
						"org.xtext.example.opt.Opt.MinMax");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_17=';'
		{
			newLeafNode(otherlv_17, grammarAccess.getOptimizerAccess().getSemicolonKeyword_17());
		}
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getOptimizerAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleEvolutionaryStrategies
entryRuleEvolutionaryStrategies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvolutionaryStrategiesRule()); }
	iv_ruleEvolutionaryStrategies=ruleEvolutionaryStrategies
	{ $current=$iv_ruleEvolutionaryStrategies.current; }
	EOF;

// Rule EvolutionaryStrategies
ruleEvolutionaryStrategies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='evolutionarystrategies'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvolutionaryStrategiesAccess().getEvolutionarystrategiesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEvolutionaryStrategiesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionaryStrategiesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvolutionaryStrategiesAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='mu'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvolutionaryStrategiesAccess().getMuKeyword_3());
		}
		(
			(
				lv_mu_4_0=RULE_INT
				{
					newLeafNode(lv_mu_4_0, grammarAccess.getEvolutionaryStrategiesAccess().getMuINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionaryStrategiesRule());
					}
					setWithLastConsumed(
						$current,
						"mu",
						lv_mu_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getEvolutionaryStrategiesAccess().getSemicolonKeyword_5());
		}
		otherlv_6='lambda'
		{
			newLeafNode(otherlv_6, grammarAccess.getEvolutionaryStrategiesAccess().getLambdaKeyword_6());
		}
		(
			(
				lv_lambda_7_0=RULE_INT
				{
					newLeafNode(lv_lambda_7_0, grammarAccess.getEvolutionaryStrategiesAccess().getLambdaINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionaryStrategiesRule());
					}
					setWithLastConsumed(
						$current,
						"lambda",
						lv_lambda_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getEvolutionaryStrategiesAccess().getSemicolonKeyword_8());
		}
		otherlv_9='sigma'
		{
			newLeafNode(otherlv_9, grammarAccess.getEvolutionaryStrategiesAccess().getSigmaKeyword_9());
		}
		(
			(
				lv_sigma_10_0=RULE_DECIMAL
				{
					newLeafNode(lv_sigma_10_0, grammarAccess.getEvolutionaryStrategiesAccess().getSigmaDECIMALTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionaryStrategiesRule());
					}
					setWithLastConsumed(
						$current,
						"sigma",
						lv_sigma_10_0,
						"org.xtext.example.opt.Opt.DECIMAL");
				}
			)
		)
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getEvolutionaryStrategiesAccess().getSemicolonKeyword_11());
		}
		otherlv_12='strategy'
		{
			newLeafNode(otherlv_12, grammarAccess.getEvolutionaryStrategiesAccess().getStrategyKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionaryStrategiesAccess().getStrategyESStrategyEnumRuleCall_13_0());
				}
				lv_strategy_13_0=ruleESStrategy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionaryStrategiesRule());
					}
					set(
						$current,
						"strategy",
						lv_strategy_13_0,
						"org.xtext.example.opt.Opt.ESStrategy");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getEvolutionaryStrategiesAccess().getSemicolonKeyword_14());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getEvolutionaryStrategiesAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='variable'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getTypeVariableTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.opt.Opt.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='group'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getGroupKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getGroupVariableGroupEnumRuleCall_5_0());
				}
				lv_group_5_0=ruleVariableGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"group",
						lv_group_5_0,
						"org.xtext.example.opt.Opt.VariableGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					lv_lowValue_7_0=RULE_DECIMAL
					{
						newLeafNode(lv_lowValue_7_0, grammarAccess.getVariableAccess().getLowValueDECIMALTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableRule());
						}
						setWithLastConsumed(
							$current,
							"lowValue",
							lv_lowValue_7_0,
							"org.xtext.example.opt.Opt.DECIMAL");
					}
				)
			)
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getVariableAccess().getCommaKeyword_6_2());
			}
			(
				(
					lv_highValue_9_0=RULE_DECIMAL
					{
						newLeafNode(lv_highValue_9_0, grammarAccess.getVariableAccess().getHighValueDECIMALTerminalRuleCall_6_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableRule());
						}
						setWithLastConsumed(
							$current,
							"highValue",
							lv_highValue_9_0,
							"org.xtext.example.opt.Opt.DECIMAL");
					}
				)
			)
			otherlv_10=']'
			{
				newLeafNode(otherlv_10, grammarAccess.getVariableAccess().getRightSquareBracketKeyword_6_4());
			}
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getVariableAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleSimulation
entryRuleSimulation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimulationRule()); }
	iv_ruleSimulation=ruleSimulation
	{ $current=$iv_ruleSimulation.current; }
	EOF;

// Rule Simulation
ruleSimulation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='simulation'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimulationAccess().getSimulationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSimulationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimulationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSimulationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='modelFolder'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimulationAccess().getModelFolderKeyword_3());
		}
		(
			(
				lv_modelFileFolderPath_4_0=RULE_STRING
				{
					newLeafNode(lv_modelFileFolderPath_4_0, grammarAccess.getSimulationAccess().getModelFileFolderPathSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimulationRule());
					}
					setWithLastConsumed(
						$current,
						"modelFileFolderPath",
						lv_modelFileFolderPath_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimulationAccess().getSemicolonKeyword_5());
		}
		otherlv_6='functionname'
		{
			newLeafNode(otherlv_6, grammarAccess.getSimulationAccess().getFunctionnameKeyword_6());
		}
		(
			(
				lv_functionName_7_0=RULE_STRING
				{
					newLeafNode(lv_functionName_7_0, grammarAccess.getSimulationAccess().getFunctionNameSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimulationRule());
					}
					setWithLastConsumed(
						$current,
						"functionName",
						lv_functionName_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getSimulationAccess().getSemicolonKeyword_8());
		}
		otherlv_9='initialization'
		{
			newLeafNode(otherlv_9, grammarAccess.getSimulationAccess().getInitializationKeyword_9());
		}
		(
			(
				lv_initialization_10_0=RULE_STRING
				{
					newLeafNode(lv_initialization_10_0, grammarAccess.getSimulationAccess().getInitializationSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimulationRule());
					}
					setWithLastConsumed(
						$current,
						"initialization",
						lv_initialization_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getSimulationAccess().getSemicolonKeyword_11());
		}
		otherlv_12='modelType'
		{
			newLeafNode(otherlv_12, grammarAccess.getSimulationAccess().getModelTypeKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimulationAccess().getModelTypeSimModelTypeEnumRuleCall_13_0());
				}
				lv_modelType_13_0=ruleSimModelType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimulationRule());
					}
					set(
						$current,
						"modelType",
						lv_modelType_13_0,
						"org.xtext.example.opt.Opt.SimModelType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getSimulationAccess().getSemicolonKeyword_14());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getSimulationAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current.getText(); }
	EOF;

// Rule Operator
ruleOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getAsteriskKeyword_2());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getSolidusKeyword_3());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getPercentSignKeyword_4());
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getDecimalConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_DECIMAL
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueDECIMALTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.xtext.example.opt.Opt.DECIMAL");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getVariableRefAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getAtomicAccess().getVariableVariableCrossReference_2_1_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getFunction1ExpressionParserRuleCall_3_0());
				}
				lv_function1_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"function1",
						lv_function1_3_0,
						"org.xtext.example.opt.Opt.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getSemicolonKeyword_4());
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getLeftAtomicParserRuleCall_0_0());
				}
				lv_left_0_0=ruleAtomic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"org.xtext.example.opt.Opt.Atomic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getOperatorOperatorParserRuleCall_1_0_0());
					}
					lv_operator_1_0=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"org.xtext.example.opt.Opt.Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_1_0());
					}
					lv_right_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_2_0,
							"org.xtext.example.opt.Opt.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConvergence
entryRuleConvergence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConvergenceRule()); }
	iv_ruleConvergence=ruleConvergence
	{ $current=$iv_ruleConvergence.current; }
	EOF;

// Rule Convergence
ruleConvergence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='convergence'
		{
			newLeafNode(otherlv_0, grammarAccess.getConvergenceAccess().getConvergenceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConvergenceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConvergenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConvergenceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='convergencethreshold'
			{
				newLeafNode(otherlv_3, grammarAccess.getConvergenceAccess().getConvergencethresholdKeyword_3_0());
			}
			(
				(
					lv_convergenceThreshold_4_0=RULE_INT
					{
						newLeafNode(lv_convergenceThreshold_4_0, grammarAccess.getConvergenceAccess().getConvergenceThresholdINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConvergenceRule());
						}
						setWithLastConsumed(
							$current,
							"convergenceThreshold",
							lv_convergenceThreshold_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_5='.'
			{
				newLeafNode(otherlv_5, grammarAccess.getConvergenceAccess().getFullStopKeyword_3_2());
			}
			this_INT_6=RULE_INT
			{
				newLeafNode(this_INT_6, grammarAccess.getConvergenceAccess().getINTTerminalRuleCall_3_3());
			}
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getConvergenceAccess().getSemicolonKeyword_3_4());
			}
		)
		(
			otherlv_8='convergencerange'
			{
				newLeafNode(otherlv_8, grammarAccess.getConvergenceAccess().getConvergencerangeKeyword_4_0());
			}
			(
				(
					lv_convergencerange_9_0=RULE_INT
					{
						newLeafNode(lv_convergencerange_9_0, grammarAccess.getConvergenceAccess().getConvergencerangeINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConvergenceRule());
						}
						setWithLastConsumed(
							$current,
							"convergencerange",
							lv_convergencerange_9_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getConvergenceAccess().getSemicolonKeyword_4_2());
			}
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getConvergenceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDuration
entryRuleDuration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDurationRule()); }
	iv_ruleDuration=ruleDuration
	{ $current=$iv_ruleDuration.current; }
	EOF;

// Rule Duration
ruleDuration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='duration'
		{
			newLeafNode(otherlv_0, grammarAccess.getDurationAccess().getDurationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDurationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDurationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='durationtime'
			{
				newLeafNode(otherlv_3, grammarAccess.getDurationAccess().getDurationtimeKeyword_3_0());
			}
			(
				(
					lv_durationtime_4_0=RULE_STRING
					{
						newLeafNode(lv_durationtime_4_0, grammarAccess.getDurationAccess().getDurationtimeSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDurationRule());
						}
						setWithLastConsumed(
							$current,
							"durationtime",
							lv_durationtime_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getDurationAccess().getSemicolonKeyword_3_2());
			}
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDurationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEndTime
entryRuleEndTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndTimeRule()); }
	iv_ruleEndTime=ruleEndTime
	{ $current=$iv_ruleEndTime.current; }
	EOF;

// Rule EndTime
ruleEndTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='endtime'
		{
			newLeafNode(otherlv_0, grammarAccess.getEndTimeAccess().getEndtimeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEndTimeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndTimeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEndTimeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='endtime'
			{
				newLeafNode(otherlv_3, grammarAccess.getEndTimeAccess().getEndtimeKeyword_3_0());
			}
			(
				(
					lv_endtime_4_0=RULE_STRING
					{
						newLeafNode(lv_endtime_4_0, grammarAccess.getEndTimeAccess().getEndtimeSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEndTimeRule());
						}
						setWithLastConsumed(
							$current,
							"endtime",
							lv_endtime_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getEndTimeAccess().getSemicolonKeyword_3_2());
			}
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEndTimeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMaxIteration
entryRuleMaxIteration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxIterationRule()); }
	iv_ruleMaxIteration=ruleMaxIteration
	{ $current=$iv_ruleMaxIteration.current; }
	EOF;

// Rule MaxIteration
ruleMaxIteration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='maxiteration'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxIterationAccess().getMaxiterationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMaxIterationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaxIterationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaxIterationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_maxiteration_3_0=RULE_INT
				{
					newLeafNode(lv_maxiteration_3_0, grammarAccess.getMaxIterationAccess().getMaxiterationINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaxIterationRule());
					}
					setWithLastConsumed(
						$current,
						"maxiteration",
						lv_maxiteration_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getMaxIterationAccess().getSemicolonKeyword_4());
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMaxIterationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleThreshold
entryRuleThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThresholdRule()); }
	iv_ruleThreshold=ruleThreshold
	{ $current=$iv_ruleThreshold.current; }
	EOF;

// Rule Threshold
ruleThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='threshold'
		{
			newLeafNode(otherlv_0, grammarAccess.getThresholdAccess().getThresholdKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getThresholdAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThresholdRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getThresholdAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='thresholdvalue'
			{
				newLeafNode(otherlv_3, grammarAccess.getThresholdAccess().getThresholdvalueKeyword_3_0());
			}
			(
				(
					lv_thresholdvalue_4_0=RULE_DECIMAL
					{
						newLeafNode(lv_thresholdvalue_4_0, grammarAccess.getThresholdAccess().getThresholdvalueDECIMALTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getThresholdRule());
						}
						setWithLastConsumed(
							$current,
							"thresholdvalue",
							lv_thresholdvalue_4_0,
							"org.xtext.example.opt.Opt.DECIMAL");
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getThresholdAccess().getSemicolonKeyword_3_2());
			}
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getThresholdAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule ESStrategy
ruleESStrategy returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='COMMA'
			{
				$current = grammarAccess.getESStrategyAccess().getCOMMAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getESStrategyAccess().getCOMMAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='PLUS'
			{
				$current = grammarAccess.getESStrategyAccess().getPLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getESStrategyAccess().getPLUSEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule VariableGroup
ruleVariableGroup returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FACTOR'
			{
				$current = grammarAccess.getVariableGroupAccess().getFACTOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariableGroupAccess().getFACTOREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='RESPONSE'
			{
				$current = grammarAccess.getVariableGroupAccess().getRESPONSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariableGroupAccess().getRESPONSEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule VariableType
ruleVariableType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='BOOLEAN'
			{
				$current = grammarAccess.getVariableTypeAccess().getBOOLEANEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariableTypeAccess().getBOOLEANEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='INTEGER'
			{
				$current = grammarAccess.getVariableTypeAccess().getINTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariableTypeAccess().getINTEGEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DECIMAL'
			{
				$current = grammarAccess.getVariableTypeAccess().getDECIMALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVariableTypeAccess().getDECIMALEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='STRING'
			{
				$current = grammarAccess.getVariableTypeAccess().getSTRINGEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVariableTypeAccess().getSTRINGEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule MinMax
ruleMinMax returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Min'
			{
				$current = grammarAccess.getMinMaxAccess().getMinEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMinMaxAccess().getMinEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Max'
			{
				$current = grammarAccess.getMinMaxAccess().getMaxEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMinMaxAccess().getMaxEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SimModelType
ruleSimModelType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STATIC'
			{
				$current = grammarAccess.getSimModelTypeAccess().getSTATICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSimModelTypeAccess().getSTATICEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='CONTINUOUS'
			{
				$current = grammarAccess.getSimModelTypeAccess().getCONTINUOUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSimModelTypeAccess().getCONTINUOUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DISCRETEEVENT'
			{
				$current = grammarAccess.getSimModelTypeAccess().getDISCRETEEVENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSimModelTypeAccess().getDISCRETEEVENTEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DECIMAL : '-'? RULE_INT* '.' RULE_INT+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
